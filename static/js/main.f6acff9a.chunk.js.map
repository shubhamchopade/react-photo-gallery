{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFireStore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","whileHover","opacity","layout","key","onClick","img","transition","delay","src","alt","Modal","classList","contains","y","App","selectedImg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6acff9a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC-FH21Ns99TTqgvxogBTJq3FKqC47paSQ\",\r\n  authDomain: \"photo-gallery-37e07.firebaseapp.com\",\r\n  databaseURL: \"https://photo-gallery-37e07.firebaseio.com\",\r\n  projectId: \"photo-gallery-37e07\",\r\n  storageBucket: \"photo-gallery-37e07.appspot.com\",\r\n  messagingSenderId: \"740102157557\",\r\n  appId: \"1:740102157557:web:f9d61dda9bb6454d7041bc\",\r\n  measurementId: \"G-N41KNV1W7Q\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFireStore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage, projectFireStore, timestamp}","import React, {useState, useEffect} from 'react';\r\nimport {projectStorage, projectFireStore, timestamp} from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //References\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFireStore.collection('images')\r\n\r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(error);\r\n    }, async() => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp();\r\n      collectionRef.add({url, createdAt });\r\n      setUrl(url)\r\n    })\r\n  }, [file])\r\n\r\n  return {progress, url, error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  console.log(progress, url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n      className=\"progress-bar\"\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const changeHandler = (e) => {\r\n    const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n    const selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('')\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an Image file (png or jpeg)\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input type=\"file\" onChange={changeHandler}></input>\r\n        <div className=\"output\">\r\n          {error && <div className=\"error\">{error}</div>}\r\n          {file && <div>{file.name}</div>}\r\n          {file && <ProgressBar file={file} setFile={setFile} />}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFireStore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(()=> {\r\n    const unsub = projectFireStore.collection(collection)\r\n    .orderBy('createdAt', 'desc')\r\n    .onSnapshot((snap)=>{\r\n      let documents = [];\r\n      snap.forEach(doc => {\r\n        documents.push({...doc.data(), id: doc.id})\r\n      })\r\n      setDocs(documents);\r\n    });\r\n\r\n    return () => unsub();\r\n  }, [collection])\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  console.log(docs);\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            whileHover={{ opacity: 1 }}\r\n            layout\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img \r\n              initial={{ opacity: 0 }}\r\n              animate={{opacity: 1}}\r\n              transition={{delay: 1}}\r\n              src={doc.url}\r\n              alt=\"uploaded\"\r\n            ></motion.img>\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from 'react'\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Modal = ({selected, setSelectedImg}) => {\r\n\r\n  const handleClick = e => {\r\n    if(e.target.classList.contains('backdrop')){\r\n      setSelectedImg(null)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <motion.div initial={{opacity: 0}} animate={{opacity: 1}} className='backdrop' onClick={handleClick}>\r\n      <motion.img initial={{y:'-100vh'}} animate={{y:'0'}} src={selected} alt='enlarged pic'></motion.img>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm'\nimport ImageGrid from './comps/ImageGrid'\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null)\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selected={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}